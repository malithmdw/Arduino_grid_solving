package javaapplication1;

/**
 *
 * @author malith
 */
public class JavaApplication1 {
        int arr[][]={
           {1,1,1,1,1,1,0,1,0,1},
           {0,0,0,0,0,0,1,1,1,1},
           {1,0,0,1,1,1,1,0,0,1},
           {1,0,1,1,0,1,0,0,0,1},
           {1,1,1,0,0,1,0,1,0,1},
           {1,0,0,0,1,1,1,0,0,1},
           {1,0,0,0,1,0,1,0,0,1}
        };
        int arr2[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	int k=1;

        int p=0;
	int q=0;
	int rows=3;
        
        int stop=0;
        
    public static void main(String[] args) {
        JavaApplication1 pa=new JavaApplication1();
        pa.mypath(6,0);
        pa.print();
        
    }
void print(){
    for(int x=0;x<40;x++){
        System.out.print(arr2[x]); 
    } 
    System.out.println("");
}  
int mypath(int p,int q){
    
    System.out.println(p+" , "+q);
    print();
    if(p==6 && q==9){
        stop=1;
        System.out.println("END");
      return 0;  
    }
    int rightexist=1;
    int downexist=1;
    int upexist=1;
    int backexist=1;
    if(q == 9){rightexist=0;}
    if(p == 6){downexist=0;}
    if(p == 0){upexist=0;}
    if(q == 0){backexist=0;}
    
    if(stop==1){
        return 0;
    }else{
        if(rightexist==1 && arr2[k-1] != 3 && stop==0){
            if(arr[p][q+1]==1){
               arr2[k]=1;
               k=k+1;
               mypath(p,q+1);           
            }  
        }
        if(downexist==1 && arr2[k-1] != 4 && stop==0){
            if(arr[p+1][q]==1){
               arr2[k]=2;
               k=k+1;
               mypath(p+1,q);           
            }  
        }
        if(upexist==1 && arr2[k-1] != 2 && stop==0){
            if(arr[p-1][q]==1){
               arr2[k]=4;
               k=k+1;
               mypath(p-1,q);           
            }  
        }
        if(backexist==1 && arr2[k-1] != 1 && stop==0){
            if(arr[p][q-1]==1){
               arr2[k]=3;
               k=k+1;
               mypath(p-1,q);           
            }  
        }
        if(stop==0){
            arr[p][q]=0;
            k=k-1;
            switch(arr2[k]){
                case 1:mypath(p,q-1);//>
                case 2:mypath(p-1,q);//
                case 3:mypath(p,q+1);//<
                case 4:mypath(p+1,q);//^
            }
        }
    }    
    return 0;
    
}
}